import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

@RunWith(Parameterized.class) // Quando usamos a parametrização temos que mudar o
public class TesteRegrasCadastro {
    private WebDriver driver;
    private DSL dsl;
    private CampoTreinamentoPage page;

    @Parameterized.Parameter
    public String nome;
    @Parameterized.Parameter(value=1)
    public String sobrenome;
    @Parameterized.Parameter(value=2)
    public String sexo;
    @Parameterized.Parameter(value=3)
    public List<String> comidas;
    @Parameterized.Parameter(value=4)
    public String[] esportes;
    @Parameterized.Parameter(value=5)
    public String msg;

    @Before
    public void iniciar() {
        driver = new FirefoxDriver();
        driver.manage().window().setSize(new Dimension(1220, 765));
        driver.get("file:///" + System.getProperty("user.dir") + "/src/main/resources/componentes.html");
        dsl = new DSL(driver);
        page = new CampoTreinamentoPage(driver);
    }

    @After
    public void finalizar() {
        driver.quit();
    }

    @Parameterized.Parameters // esse método será chamado para receber o paramêtro
    public static Collection<Object[]> getCollection(){ // Lista de Object
        return Arrays.asList(new Object[][] { //Retorna uma arraylist de objetos
                {"", "", "", Arrays.asList(), new String[]{}, "Nome eh obrigatorio"},
                {"Wesley", "", "", Arrays.asList(), new String[]{}, "Sobrenome eh obrigatorio"},
                {"Weslley", "Santos", "", Arrays.asList(), new String[]{}, "Sexo eh obrigatorio"},
                {"Weslley", "Santos", "Masculino", Arrays.asList("Carne", "Vegetariano"), new String[]{}, "Tem certeza que voce eh vegetariano?"},
                {"Weslley", "Santos", "Masculino", Arrays.asList("Carne"), new String[]{"Karate", "O que eh esporte?"}, "Voce faz esporte ou nao?"}
        });
    }

    @Test
    public void deveValidarRegras() {
        page.preencherCampoNome(nome);
        page.preencherCampoSobrenome(sobrenome);

        if (sexo.equals("Masculino")) {
            page.setSexoMasculino();
        }
        if (sexo.equals("Feminino")){
            page.setSexoFeminino();
        }

        if(comidas.contains("Carne")) page.setCarne();
        if(comidas.contains("Frango")) page.setFrango();
        if(comidas.contains("Pizza")) page.setPizza();
        if(comidas.contains("Vegetariano")) page.setVegetariano();

        page.setEsportes(esportes);
        page.cadatrar();
        Assert.assertEquals(msg, dsl.alertaObterTextoEAceite());
    }
}


2.0.0
@RunWith(Parameterized.class)
public class TesteRegrasCadastro extends BaseTest {

    private DSL dsl;
    private CampoTreinamentoPage page;

    @Parameterized.Parameter
    public String nome;
    @Parameterized.Parameter(value=1)
    public String sobrenome;
    @Parameterized.Parameter(value=2)
    public String sexo;
    @Parameterized.Parameter(value=3)
    public List<String> comidas;
    @Parameterized.Parameter(value=4)
    public String[] esportes;
    @Parameterized.Parameter(value=5)
    public String msg;

    @Before
    public void iniciar() {
        DriverFactory.getDriver().get("file:///" + System.getProperty("user.dir") + "/src/main/resources/componentes.html");
        dsl = new DSL();
        page = new CampoTreinamentoPage();
    }

    @Parameterized.Parameters
    public static Collection<Object[]> getCollection(){
        return Arrays.asList(new Object[][] {
                {"", "", "", Arrays.asList(), new String[]{}, "Nome eh obrigatorio"},
                {"Wesley", "", "", Arrays.asList(), new String[]{}, "Sobrenome eh obrigatorio"},
                {"Weslley", "Santos", "", Arrays.asList(), new String[]{}, "Sexo eh obrigatorio"},
                {"Weslley", "Santos", "Masculino", Arrays.asList("Carne", "Vegetariano"), new String[]{}, "Tem certeza que voce eh vegetariano?"},
                {"Weslley", "Santos", "Masculino", Arrays.asList("Carne"), new String[]{"Karate", "O que eh esporte?"}, "Voce faz esporte ou nao?"}
        });
    }

    @Test
    public void deveValidarRegras() {
        page.setNome(nome);
        page.setSobrenome(sobrenome);

        if (sexo.equals("Masculino")) {
            page.setSexoMasculino();
        }
        if (sexo.equals("Feminino")){
            page.setSexoFeminino();
        }

        if(comidas.contains("Carne")) page.setCarne();
        if(comidas.contains("Frango")) page.setFrango();
        if(comidas.contains("Pizza")) page.setPizza();
        if(comidas.contains("Vegetariano")) page.setVegetariano();

        page.setEsportes(esportes);
        page.cadatrar();
        Assert.assertEquals(msg, dsl.alertaObterTextoEAceite());
    }